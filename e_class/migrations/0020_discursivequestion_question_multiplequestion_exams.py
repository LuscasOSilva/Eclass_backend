# Generated by Django 4.1.6 on 2023-02-12 00:14

from django.db import migrations, models #type: ignore
import django.db.models.deletion #type: ignore


class Migration(migrations.Migration):
    dependencies = [
        ("e_class", "0019_alter_subject_options_rename_course_subject_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="DiscursiveQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer", models.TextField(blank=True, max_length=200)),
            ],
            options={
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_visibility", models.BooleanField(default=False)),
                ("statement", models.TextField()),
                ("students", models.ManyToManyField(to="e_class.student")),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="e_class.teacher",
                    ),
                ),
            ],
            options={
                "ordering": ["statement"],
            },
        ),
        migrations.CreateModel(
            name="MultipleQuestion",
            fields=[
                (
                    "question_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="e_class.question",
                    ),
                ),
                ("option1", models.TextField()),
                ("option2", models.TextField()),
                ("option3", models.TextField(blank=True)),
                ("option4", models.TextField(blank=True)),
                (
                    "answer",
                    models.IntegerField(
                        choices=[
                            (1, "Option1"),
                            (2, "Option2"),
                            (3, "Option3"),
                            (4, "Option4"),
                        ]
                    ),
                ),
            ],
            options={
                "ordering": ["id"],
            },
            bases=("e_class.question",),
        ),
        migrations.CreateModel(
            name="Exams",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("startAt", models.DateTimeField()),
                ("endedAt", models.DateTimeField()),
                ("isVisible", models.BooleanField()),
                ("score", models.FloatField()),
                (
                    "discursiveQuestions",
                    models.ManyToManyField(to="e_class.discursivequestion"),
                ),
                ("students", models.ManyToManyField(to="e_class.student")),
                (
                    "teacher",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="e_class.teacher",
                    ),
                ),
                (
                    "multipleQuestions",
                    models.ManyToManyField(to="e_class.multiplequestion"),
                ),
            ],
            options={
                "ordering": ["id"],
            },
        ),
    ]
